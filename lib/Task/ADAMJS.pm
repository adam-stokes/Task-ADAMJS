# ABSTRACT: Libraries/Application I use regularly
package Task::ADAMJS;

use strict;
use warnings;
use App::Nopaste;
use App::cpanminus;
use Mojo::UserAgent;
use App::Ack;
use App::Cmd;
use App::Cronjob;
use App::GitGot;
use App::cpanoutdated;
use App::ph;
use App::scan_prereqs_cpanfile;
use App::HTTPThis;
use DateTime;
use Data::Format::Pretty;
use Data::Format::Pretty::YAML;
use IO::Socket::SSL;
use JSON;
use List::AllUtils;
use Mango;
use Mojolicious;
use Moose;
use Net::Launchpad;
use Net::Salesforce;
use Net::Twitter;
use Perl::Tidy::Sweetened;
use Pithub;
use Pod::Weaver;
use Pod::Weaver::Plugin::Encoding;
use Pod::Weaver::Section::SourceGitHub;
use Pod::Weaver::Section::WarrantyDisclaimer;
use Rex;
use Text::Markdown;
use Ubic;
use namespace::autoclean;
use Algorithm::Diff;
use Any::Moose;
use App::Cmd;
use App::Cronjob;
use App::FatPacker;
use App::GitGot;
use App::Nopaste;
use App::cpanminus;
use App::cpanoutdated;
use App::ph;
use App::scan_prereqs_cpanfile;
use Array::Iterator;
use B::Hooks::EndOfScope;
use B::Hooks::OP::Check;
use CPAN::DistnameInfo;
use CPAN::Meta;
use CPAN::Meta::Check;
use CPAN::Uploader;
use Capture::Tiny;
use Carp::Clan;
use Carton;
use Class::Accessor;
use Class::Data::Inheritable;
use Class::Inspector;
use Class::Load;
use Class::Load::XS;
use Class::Method::Modifiers;
use Class::Singleton;
use Clone;
use Clone::PP;
use Config::INI;
use Config::MVP;
use Config::MVP::Reader::INI;
use Config::MVP::Slicer;
use Config::Tiny;
use Crypt::SSLeay;
use DBI;
use Data::MessagePack;
use Data::OptList;
use Data::Printer;
use Data::Section;
use Data::Visitor;
use Date::Parse;
use DateTime;
use DateTime::Format::RFC3339;
use DateTime::Format::Strptime;
use DateTime::Locale;
use DateTime::Set;
use DateTime::TimeZone;
use Devel::CheckCompiler;
use Devel::FindPerl;
use Devel::GlobalDestruction;
use Devel::StackTrace;
use Devel::Symdump;
use Digest::HMAC;
use Digest::SHA1;
use Directory::Scratch;
use Dist::CheckConflicts;
use Dist::Milla;
use Dist::Zilla;
use Dist::Zilla::Config::Slicer;
use Dist::Zilla::Plugin::CheckChangesHasContent;
use Dist::Zilla::Plugin::Config::Git;
use Dist::Zilla::Plugin::ContributorsFromGit;
use Dist::Zilla::Plugin::CopyFilesFromBuild;
use Dist::Zilla::Plugin::CopyFilesFromRelease;
use Dist::Zilla::Plugin::Git;
use Dist::Zilla::Plugin::GithubMeta;
use Dist::Zilla::Plugin::LicenseFromModule;
use Dist::Zilla::Plugin::ModuleBuildTiny;
use Dist::Zilla::Plugin::NameFromDirectory;
use Dist::Zilla::Plugin::Prereqs::FromCPANfile;
use Dist::Zilla::Plugin::ReadmeAnyFromPod;
use Dist::Zilla::Plugin::ReadmeFromPod;
use Dist::Zilla::Plugin::ReversionOnRelease;
use Dist::Zilla::Plugin::Test::Compile;
use Dist::Zilla::Role::DynamicConfig;
use Dist::Zilla::Role::File::ChangeNotification;
use Dist::Zilla::Role::RegisterStash;
use Dist::Zilla::Role::Stash::Plugins;
use Dist::Zilla::Stash::PodWeaver;
use Email::Abstract;
use Email::Address;
use Email::Date::Format;
use Email::Sender;
use Email::Simple;
use Encode::Locale;
use Eval::Closure;
use Exception::Class;
use Expect;
use ExtUtils::Config;
use ExtUtils::Depends;
use ExtUtils::Helpers;
use ExtUtils::InstallPaths;
use ExtUtils::MakeMaker;
use ExtUtils::ParseXS;
use File::Copy::Recursive;
use File::Find::Rule;
use File::HomeDir;
use File::Listing;
use File::NFSLock;
use File::Next;
use File::Remove;
use File::ShareDir;
use File::ShareDir::Install;
use File::Slurp;
use File::Temp;
use File::Which;
use File::chdir;
use File::pushd;
use Getopt::Long::Descriptive;
use Git::Wrapper;
use HTML::Form;
use HTML::Parser;
use HTML::Tagset;
use HTML::Tree;
use HTML::TreeBuilder::XPath;
use HTTP::Cookies;
use HTTP::Daemon;
use HTTP::Date;
use HTTP::Message;
use HTTP::Negotiate;
use HTTP::Server::Simple;
use Hash::Merge::Simple;
use Hook::LexWrap;
use IO::HTML;
use IO::Pipely;
use IO::Prompt;
use IO::Socket::SSL;
use IO::String;
use IO::Stringy;
use IO::TieCombine;
use IO::Tty;
use IPC::Run3;
use IPC::System::Simple;
use IRC::Utils;
use Import::Into;
use JSON;
use JSON::Any;
use JSON::XS;
use LWP;
use LWP::MediaTypes;
use LWP::Protocol::https;
use Lexical::SealRequireHints;
use List::AllUtils;
use List::MoreUtils;
use List::Util;
use Log::Dispatch;
use Log::Dispatch::Array;
use Log::Dispatchouli;
use Log::Log4perl;
use Log::Message;
use Log::Message::Simple;
use MRO::Compat;
use Mango;
use Mixin::Linewise;
use Module::Build;
use Module::Build::Tiny;
use Module::Build::XSUtil;
use Module::CPANfile;
use Module::Implementation;
use Module::Path;
use Module::Pluggable;
use Module::Reader;
use Module::Runtime;
use Mojolicious;
use Moo;
use MooX::Types::MooseLike;
use Moose;
use Moose::Autobox;
use MooseX::App::Cmd;
use MooseX::AttributeShortcuts;
use MooseX::Has::Sugar;
use MooseX::LazyRequire;
use MooseX::OneArgNew;
use MooseX::Role::Parameterized;
use MooseX::SetOnce;
use MooseX::Types;
use MooseX::Types::Common;
use MooseX::Types::Path::Class;
use MooseX::Types::Perl;
use MooseX::Types::URI;
use Mouse;
use MouseX::Getopt;
use MouseX::NativeTraits;
use Mozilla::CA;
use Net::GitHub;
use Net::HTTP;
use Net::Launchpad;
use Net::OAuth;
use Net::SSH2;
use Net::SSLeay;
use Net::Salesforce;
use Net::Twitter;
use Number::Compare;
use Object::Pluggable;
use POE;
use POE::Component::IRC;
use POE::Component::Schedule;
use POE::Component::Syndicator;
use POE::Filter::IRCD;
use POE::Test::Loops;
use PPI;
use Package::DeprecationManager;
use Package::Stash;
use Package::Stash::XS;
use Params::Util;
use Params::Validate;
use Path::Class;
use Path::Tiny;
use Perl::PrereqScanner;
use Perl::Tidy;
use Perl::Tidy::Sweetened;
use Perl::Version;
use Pithub;
use Pod::Coverage;
use Pod::Elemental;
use Pod::Eventual;
use Pod::Markdown;
use Pod::Weaver;
use Probe::Perl;
use Process::Status;
use Rex;
use Role::HasMessage;
use Role::Tiny;
use Scope::Guard;
use Set::Infinite;
use Set::Scalar;
use Software::License;
use Sort::Naturally;
use Sort::Versions;
use String::Dirify;
use String::Errf;
use String::Escape;
use String::Flogger;
use String::Formatter;
use String::RewritePrefix;
use String::Truncate;
use String::Util;
use Sub::Exporter;
use Sub::Exporter::ForMethods;
use Sub::Exporter::GlobExporter;
use Sub::Exporter::Progressive;
use Sub::Install;
use Sub::Name;
use Sub::Uplevel;
use Syntax::Keyword::Junction;
use Sys::Hostname::Long;
use Task::Weaken;
use Term::Encoding;
use Term::ReadKey;
use Term::ReadLine;
use Term::UI;
use Test::CheckDeps;
use Test::Deep;
use Test::Differences;
use Test::Exception;
use Test::Fatal;
use Test::Harness;
use Test::MockModule;
use Test::MockObject;
use Test::Most;
use Test::NoWarnings;
use Test::Object;
use Test::Pod;
use Test::Pod::Coverage;
use Test::Script;
use Test::SubCalls;
use Test::TempDir;
use Test::Tester;
use Test::Warn;
use Text::Diff;
use Text::Glob;
use Text::Markdown;
use Text::MultiMarkdown;
use Text::Template;
use Text::Xslate;
use Throwable;
use Tie::IxHash;
use Tie::ToObject;
use Tree::DAG_Node;
use Try::Tiny;
use Types::Serialiser;
use UUID::Random;
use UNIVERSAL;
use URI;
use URI::Encode;
use URI::FromHash;
use Ubic;
use Variable::Magic;
use Version::Next;
use WWW::Mechanize;
use WWW::Mechanize::GZip;
use WWW::RobotRules;
use WWW::Shorten::Simple;
use Want;
use XML::Atom::SimpleFeed;
use XML::NamespaceSupport;
use XML::Parser;
use XML::SAX;
use XML::SAX::Base;
use XML::SAX::Expat;
use XML::Simple;
use XML::XPathEngine;
use YAML;
use YAML::Tiny;
use aliased;
use autobox;
use autobox::Core;
use bareword::filehandles;
use common::sense;
use indirect;
use local::lib;
use multidimensional;
use namespace::autoclean;
use namespace::clean;
use strictures;
use syntax;


1;
__END__

=head1 SYNOPSIS

  # cpanm git@github.com:battlemidget/Task-ADAMJS.git

=head1 DESCRIPTION

Task::ADAMJS is collection of perl applications and libraries I find useful
and frequently depend on. Check the B<cpanfile> for list of dependencies.

=cut
